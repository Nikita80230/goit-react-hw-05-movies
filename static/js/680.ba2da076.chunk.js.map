{"version":3,"file":"static/js/680.ba2da076.chunk.js","mappings":"6KAGMA,GAAYC,EAAAA,EAAAA,OACd,kBACI,IAAIC,SAAQ,SAACC,EAASC,GAClB,6BACKC,MAAK,SAAAC,GAAM,OAAIH,EAAQG,EAAOC,QAAUD,EAAS,CAAEC,QAASD,GAAjD,IACXE,MAAMJ,EACd,GALL,IA4BJ,IApBkB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,8BACKF,EAAOG,KAAI,SAAAC,GACR,OACI,SAAC,EAAAC,KAAD,CAEIC,GAAE,mBAAcF,EAAMG,IACtBC,MAAO,CAAEC,KAAMR,GAHnB,UAKI,SAACV,EAAD,CAAWa,MAAOA,KAJbA,EAAMG,GAOtB,KAGZ,C,yGCDD,UAzBiB,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEaC,EAAAA,EAAAA,aAFb,OAENC,EAFM,OAGZN,EAAUM,EAAWC,SAHT,gDAKZL,EAAS,EAAD,IALI,qGAAH,qDASjBE,GACH,GAAE,KAGC,iBAAKI,UAAU,WAAf,UACKP,GAASQ,QAAQC,IAAIT,IACtB,SAAC,IAAD,CAAWZ,OAAQA,MAG9B,C,6PCvBKsB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,sGACkBM,EAASK,IAAI,qBAD/B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BtB,GAA7B,yFACkBe,EAASK,IAAT,iBAAuBpB,IADzC,uBACGqB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAASK,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCzB,GAAjC,yFACkBe,EAASK,IAAT,iBAAuBpB,EAAvB,aADlB,uBACGqB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAoC1B,GAApC,yFACkBe,EAASK,IAAT,iBAAuBpB,EAAvB,aADlB,uBACGqB,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieItem = lazy(\n    () =>\n        new Promise((resolve, reject) => {\n            import('components/MovieItem/MovieItem')\n                .then(result => resolve(result.default ? result : { default: result }))\n                .catch(reject);\n        })\n);\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            {movies.map(movie => {\n                return (\n                    <Link\n                        key={movie.id}\n                        to={`/movies/:${movie.id}`}\n                        state={{ from: location }}\n                    >\n                        <MovieItem movie={movie} />\n                    </Link>\n                );\n            })}\n        </>\n    );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport { getMovies } from 'services/api';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const moviesData = await getMovies();\n                setMovies(moviesData.results);\n            } catch (error) {\n                setError(error);\n            } finally {\n            }\n        };\n        fetchMovies();\n    }, []);\n\n    return (\n        <div className=\"homePage\">\n            {error && console.log(error)}\n            <MovieList movies={movies} />\n        </div>\n    );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'e0723ed903f05e10ff2c0d0ee3dce9dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getMovies() {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByName(query) {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMoviesCastById(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n\nexport async function getMoviesReviewsById(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n"],"names":["MovieItem","lazy","Promise","resolve","reject","then","result","default","catch","movies","location","useLocation","map","movie","Link","to","id","state","from","useState","setMovies","error","setError","useEffect","fetchMovies","getMovies","moviesData","results","className","console","log","instance","axios","baseURL","params","api_key","get","data","getMoviesById","getMoviesByName","query","getMoviesCastById","getMoviesReviewsById"],"sourceRoot":""}