{"version":3,"file":"static/js/680.9e9fa890.chunk.js","mappings":"4LAEaA,EAAS,WAClB,OACI,SAAC,KAAD,CACIC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,WAGjB,C,6DCZKC,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAsBvB,IApBkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,8BACKF,EAAOG,KAAI,SAAAC,GACR,OACI,SAAC,EAAAC,KAAD,CAEIC,GAAE,mBAAcF,EAAMG,IACtBC,MAAO,CAAEC,KAAMR,GAHnB,UAKI,SAACH,EAAD,CAAWM,MAAOA,KAJbA,EAAMG,GAOtB,KAGZ,C,kHCYD,UA9BiB,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,UAAS,MAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,oGAEZF,GAAW,GAFC,UAGaG,EAAAA,EAAAA,aAHb,OAGNC,EAHM,OAIZR,EAAUQ,EAAWC,SAJT,gDAMZP,EAAS,KAAMQ,SANH,yBAQZN,GAAW,GARC,4EAAH,qDAWjBE,GACH,GAAE,KAGC,iBAAKK,UAAU,WAAf,UACKR,IAAW,SAAC,IAAD,IACXF,IAAS,wBAAKA,KACf,SAAC,IAAD,CAAWZ,OAAQA,MAI9B,C,6PC7BKuB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeT,IAAtB,4CAAO,OAAP,oBAAO,sGACkBK,EAASK,IAAI,qBAD/B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BvB,GAA7B,yFACkBgB,EAASK,IAAT,iBAAuBrB,IADzC,uBACGsB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBT,EAASK,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1B,GAAjC,yFACkBgB,EAASK,IAAT,iBAAuBrB,EAAvB,aADlB,uBACGsB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAoC3B,GAApC,yFACkBgB,EAASK,IAAT,iBAAuBrB,EAAvB,aADlB,uBACGsB,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n        />\n    );\n};","import React, { lazy } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieItem = lazy(() => import('components/MovieItem/MovieItem'));\n\nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <>\n            {movies.map(movie => {\n                return (\n                    <Link\n                        key={movie.id}\n                        to={`/movies/:${movie.id}`}\n                        state={{ from: location }}\n                    >\n                        <MovieItem movie={movie} />\n                    </Link>\n                );\n            })}\n        </>\n    );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from 'react';\nimport { getMovies } from 'services/api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                setLoading(true);\n                const moviesData = await getMovies();\n                setMovies(moviesData.results);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchMovies();\n    }, []);\n\n    return (\n        <div className=\"homePage\">\n            {loading && <Loader />}\n            {error && <h3>{error}</h3>}\n            <MovieList movies={movies} />\n\n        </div>\n    );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'e0723ed903f05e10ff2c0d0ee3dce9dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getMovies() {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByName(query) {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMoviesCastById(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n\nexport async function getMoviesReviewsById(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","MovieItem","lazy","movies","location","useLocation","map","movie","Link","to","id","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchMovies","getMovies","moviesData","results","message","className","instance","axios","baseURL","params","api_key","get","data","getMoviesById","getMoviesByName","query","getMoviesCastById","getMoviesReviewsById"],"sourceRoot":""}