{"version":3,"file":"static/js/186.3fdc00aa.chunk.js","mappings":"8LAAA,EAAgCA,EAAQ,KAAhCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACVC,EAAcH,EAAQ,IAAtBG,UACAC,EAAyBJ,EAAQ,KAAjCI,qBAkCR,UAhCgB,WACZ,IAAQC,EAAYF,IAAZE,QACR,EAA8BJ,EAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAfAL,GAAU,WACN,GAAKG,EAAL,CAEA,IAAMG,EAAe,mCAAG,6GAEeJ,EAAqBC,EAAQI,MAAM,IAFlD,OAEVC,EAFU,OAGhBH,EAAWG,EAAiBC,SAHZ,gDAKhBC,QAAQC,IAAR,MALgB,qGAAH,qDASrBL,GAXoB,CAYvB,GAAE,CAACH,IAGmB,IAAnBC,EAAQQ,QAAe,wBAClBR,EAAQS,KAAI,SAACC,GACV,OAAQ,2BACJ,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFEF,EAAOG,GAI3B,OACG,6DAEf,C,6PC9BKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAASM,IAAI,qBAD/B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BT,GAA7B,yFACkBC,EAASM,IAAT,iBAAuBP,IADzC,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBV,EAASM,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCZ,GAAjC,yFACkBC,EAASM,IAAT,iBAAuBP,EAAvB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAevB,EAAtB,kC,aAAO,O,oBAAA,WAAoCe,GAApC,yFACkBC,EAASM,IAAT,iBAAuBP,EAAvB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["const { useState, useEffect } = require('react');\nconst { useParams } = require('react-router-dom');\nconst { getMoviesReviewsById } = require('services/api');\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    // const [isCastOpened, setIsCastOpened] = useState(null)\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        const fetchMoviesById = async () => {\n            try {\n                const movieReviewsData = await getMoviesReviewsById(movieId.slice(1));\n                setReviews(movieReviewsData.results);\n            } catch (error) {\n                console.log(error);\n            } finally {\n            }\n        };\n        fetchMoviesById();\n    }, [movieId]);\n\n    return (\n        reviews.length !== 0 ? <ul>\n            {reviews.map((review) => {\n                return (<li key={review.id}>\n                    <h3>{review.author}</h3>\n                    <p>{review.content}</p>\n                </li>)\n            })}\n        </ul> : <h3>There are no reviews of this film</h3>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'e0723ed903f05e10ff2c0d0ee3dce9dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getMovies() {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByName(query) {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMoviesCastById(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n\nexport async function getMoviesReviewsById(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n// q: input,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: 'true',\n// page: page,\n"],"names":["require","useState","useEffect","useParams","getMoviesReviewsById","movieId","reviews","setReviews","fetchMoviesById","slice","movieReviewsData","results","console","log","length","map","review","author","content","id","instance","axios","baseURL","params","api_key","getMovies","get","data","getMoviesById","getMoviesByName","query","getMoviesCastById"],"sourceRoot":""}