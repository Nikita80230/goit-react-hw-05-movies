{"version":3,"file":"static/js/247.cc9409b9.chunk.js","mappings":"8LAAA,EAAgCA,EAAQ,KAAhCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACVC,EAAcH,EAAQ,IAAtBG,UACAC,EAAsBJ,EAAQ,KAA9BI,kBAkCR,UAhCa,WACT,IAAQC,EAAYF,IAAZE,QACR,EAAwBJ,EAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAkBA,OAhBAL,GAAU,WACN,GAAKG,EAAL,CAEA,IAAMG,EAAe,mCAAG,6GAEYJ,EAAkBC,EAAQI,MAAM,IAF5C,OAEVC,EAFU,OAGhBH,EAAQG,EAAcJ,MAHN,gDAKhBK,QAAQC,IAAR,MALgB,qGAAH,qDAUrBJ,GAZoB,CAavB,GAAE,CAACH,KAGA,wBACKC,EAAKO,KAAI,SAACC,GACP,OAAQ,2BACJ,gBAAKC,IAAG,yCAAoCD,EAAME,cAAgBC,IAAI,MACtE,uBAAIH,EAAMI,SAFGJ,EAAMK,GAI1B,KAGZ,C,6PC9BKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAASM,IAAI,qBAD/B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BT,GAA7B,yFACkBC,EAASM,IAAT,iBAAuBP,IADzC,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBV,EAASM,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCe,GAAjC,yFACkBC,EAASM,IAAT,iBAAuBP,EAAvB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAoCZ,GAApC,yFACkBC,EAASM,IAAT,iBAAuBP,EAAvB,aADlB,uBACGQ,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["const { useState, useEffect } = require('react');\nconst { useParams } = require('react-router-dom');\nconst { getMoviesCastById } = require('services/api');\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        const fetchMoviesById = async () => {\n            try {\n                const movieCastData = await getMoviesCastById(movieId.slice(1));\n                setCast(movieCastData.cast);\n            } catch (error) {\n                console.log(error);\n            } finally {\n            }\n        };\n        // console.log(movieCastData);\n        fetchMoviesById();\n    }, [movieId]);\n\n    return (\n        <ul>\n            {cast.map((actor) => {\n                return (<li key={actor.id}>\n                    <img src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt=\"\" />\n                    <p>{actor.name}</p>\n                </li>)\n            })}\n        </ul>\n    );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'e0723ed903f05e10ff2c0d0ee3dce9dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getMovies() {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByName(query) {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMoviesCastById(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n\nexport async function getMoviesReviewsById(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n// q: input,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: 'true',\n// page: page,\n"],"names":["require","useState","useEffect","useParams","getMoviesCastById","movieId","cast","setCast","fetchMoviesById","slice","movieCastData","console","log","map","actor","src","profile_path","alt","name","id","instance","axios","baseURL","params","api_key","getMovies","get","data","getMoviesById","getMoviesByName","query","getMoviesReviewsById"],"sourceRoot":""}