{"version":3,"file":"static/js/622.ef02751a.chunk.js","mappings":"oOACA,EAA0B,4B,SCQ1B,EANmB,WACf,OACI,mBAAQA,UAAWC,EAAnB,qBAEP,ECND,EAA8B,+BAA9B,EAA0E,8BAA1E,EAAmH,4BCItGC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExB,OAEI,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKG,IAAG,yCAAoCD,EAAME,aAAeC,IAAI,cAEzE,iBAAKN,UAAWC,EAAhB,WACI,wBAAKE,EAAMI,SACX,0CAAkBJ,EAAMK,iBACxB,wCACA,mCAAWL,EAAMM,QAAUN,EAAMM,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,UAIrE,uBACKT,EAAMU,gBAK1B,E,0BC2BD,EA/CqB,WAAO,IAAD,IACfC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOb,EAAP,KAAcc,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAkB9C,OAfAC,EAAAA,EAAAA,YAAU,WACN,GAAKT,EAAL,CAEA,IAAMU,EAAe,mCAAG,8GAEQC,EAAAA,EAAAA,eAAcX,EAAQY,MAAM,IAFpC,OAEVC,EAFU,OAGhBV,EAASU,GAHO,gDAKhBC,QAAQC,IAAR,MALgB,qGAAH,qDASrBL,GAXoB,CAYvB,GAAE,CAACV,KAGA,iCACI,SAAC,EAAAgB,KAAD,CAAMC,GAAIX,EAAV,UACI,SAAC,EAAD,OAEJ,mBACA,kBACCjB,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAC5B,mBACA,mBACA,mBAEA,SAAC,EAAA2B,KAAD,CAAMT,MAAO,CAAEC,KAAMF,GAAgBW,GAAIb,EAASc,SAASC,SAAS,QAAU,GAAK,OAAnF,UACI,oCAGJ,SAAC,EAAAH,KAAD,CAAMT,MAAO,CAAEC,KAAMF,GAAgBW,GAAIb,EAASc,SAASC,SAAS,WAAa,GAAK,UAAtF,UACI,uCAEJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACI,SAAC,KAAD,QAIf,C,6PCjDKC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAASM,IAAI,qBAD/B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BmB,GAA7B,yFACkBR,EAASM,IAAT,iBAAuBE,IADzC,uBACGD,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBV,EAASM,IAAT,8BAAoCI,IADtD,uBACGH,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACkBR,EAASM,IAAT,iBAAuBE,EAAvB,aADlB,uBACGD,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAoCJ,GAApC,yFACkBR,EAASM,IAAT,iBAAuBE,EAAvB,aADlB,uBACGD,EADH,EACGA,KADH,kBAEEA,GAFF,kE","sources":["webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"BackButton_backBtn__g7sA7\"};","import React from 'react'\nimport css from './BackButton.module.css'\n\nconst BackButton = () => {\n    return (\n        <button className={css.backBtn}> Go back</button>\n    )\n}\n\nexport default BackButton\n","// extracted by mini-css-extract-plugin\nexport default {\"filmDetails\":\"MovieCard_filmDetails__71yp+\",\"filmPoster\":\"MovieCard_filmPoster__nB28E\",\"filmInfo\":\"MovieCard_filmInfo__yHX1F\"};","import React from 'react'\nimport css from \"./MovieCard.module.css\"\n\n\n\nexport const MovieCard = ({ movie }) => {\n\n    return (\n\n        <div className={css.filmDetails}>\n            <div className={css.filmPoster}>\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"Film 1\" />\n            </div>\n            <div className={css.filmInfo}>\n                <h2>{movie.title}</h2>\n                <p>Release Date: {movie.release_date}</p>\n                <p>User Score:</p>\n                <p>Genre: {movie.genres && movie.genres.map(({ name }) => name).join(\", \")}</p>\n                {/* // .split(\", \"){genres.map(({ name }) => name)} */}\n\n\n                <p>\n                    {movie.overview}\n                </p>\n            </div>\n        </div>\n    )\n}\n","import BackButton from 'components/BackButton/BackButton';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMoviesById } from 'services/api';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const location = useLocation();\n    const backLinkHref = location?.state?.from ?? '/'\n\n\n    useEffect(() => {\n        if (!movieId) return;\n\n        const fetchMoviesById = async () => {\n            try {\n                const movieData = await getMoviesById(movieId.slice(1));\n                setMovie(movieData);\n            } catch (error) {\n                console.log(error);\n            } finally {\n            }\n        };\n        fetchMoviesById();\n    }, [movieId]);\n\n    return (\n        <>\n            <Link to={backLinkHref}>\n                <BackButton />\n            </Link>\n            <br />\n            <br />\n            {movie && <MovieCard movie={movie} />}\n            <br />\n            <br />\n            <br />\n\n            <Link state={{ from: backLinkHref }} to={location.pathname.includes('cast') ? '' : 'cast'}>\n                <h3>CAST</h3>\n            </Link>\n\n            <Link state={{ from: backLinkHref }} to={location.pathname.includes('reviews') ? '' : 'reviews'}>\n                <h3>REVIEWS</h3>\n            </Link>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'e0723ed903f05e10ff2c0d0ee3dce9dc';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport async function getMovies() {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n}\n\nexport async function getMoviesById(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n}\n\nexport async function getMoviesByName(query) {\n  const { data } = await instance.get(`/search/movie?query=${query}`);\n  return data;\n}\n\nexport async function getMoviesCastById(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n}\n\nexport async function getMoviesReviewsById(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n}\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n// q: input,\n// image_type: 'photo',\n// orientation: 'horizontal',\n// safesearch: 'true',\n// page: page,\n"],"names":["className","css","MovieCard","movie","src","poster_path","alt","title","release_date","genres","map","name","join","overview","movieId","useParams","useState","setMovie","location","useLocation","backLinkHref","state","from","useEffect","fetchMoviesById","getMoviesById","slice","movieData","console","log","Link","to","pathname","includes","Suspense","fallback","instance","axios","baseURL","params","api_key","getMovies","get","data","id","getMoviesByName","query","getMoviesCastById","getMoviesReviewsById"],"sourceRoot":""}